version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: voicesummary_postgres
    environment:
      POSTGRES_DB: voicesummary
      POSTGRES_USER: voicesummary_user
      POSTGRES_PASSWORD: voicesummary_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U voicesummary_user -d voicesummary"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - voicesummary_network

  # FastAPI Application
  app:
    build: .
    container_name: voicesummary_app
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://voicesummary_user:voicesummary_password@postgres:5432/voicesummary
      
      # S3 Configuration - Set these in your .env file or environment
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      
      # Application Configuration
      APP_HOST: 0.0.0.0
      APP_PORT: 8000
      DEBUG: ${DEBUG:-false}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    networks:
      - voicesummary_network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: voicesummary_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@voicesummary.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - voicesummary_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  voicesummary_network:
    driver: bridge
